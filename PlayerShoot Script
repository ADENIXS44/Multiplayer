using Mirror;
using UnityEngine;
public class Playershoot : NetworkBehaviour
{

    public const string PLAYER_TAG = "Player";

    public PlayerWeapon weapon;
    [SerializeField]
    private Camera cam;
    [SerializeField]
    private LayerMask mask;
    void Start()
    {
        if (cam == null)
        {
            Debug.LogError("Playershoot : No camera referenced");
            this.enabled = false;
        }
    }
    void Update()
    {
        if (Input.GetButtonDown("Fire1"))
        {
            Shoot();
        }
    }

    
    void Shoot()
    {
        RaycastHit _hit;
        if (Physics.Raycast(cam.transform.position, cam.transform.forward, out _hit, weapon.range, mask))
        {
            
            
            Debug.Log("we hit" + _hit.collider.name);
           

        }
        if (_hit.collider.tag == PLAYER_TAG)
        {
            cmdPlayershot(_hit.collider.name);
            Debug.Log("we hit" + _hit.collider.name);
        }


    }
    [Command]
    void cmdPlayershot(string _playerID)
    {
        Debug.Log(_playerID + "has been shot.");
    }
}
